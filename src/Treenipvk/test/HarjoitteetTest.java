package Treenipvk.test;
// Generated by ComTest BEGIN
import Treenipvk.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.05.06 22:08:03 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class HarjoitteetTest {



  // Generated by ComTest BEGIN
  /** testGetHarjoite59 */
  @Test
  public void testGetHarjoite59() {    // Harjoitteet: 59
    Harjoitteet harjoitteet = new Harjoitteet(); 
    Harjoite harjoite1 = new Harjoite("testi1", 0, 3); harjoite1.rekisteroi(); harjoite1.setTrid(1); harjoitteet.lisaaHarjoite(harjoite1); 
    Harjoite harjoite2 = new Harjoite("testi2", 0, 3); harjoite2.rekisteroi(); harjoite2.setTrid(2); harjoitteet.lisaaHarjoite(harjoite2); 
    Harjoite harjoite3 = new Harjoite("testi3", 0, 3); harjoite3.rekisteroi(); harjoite3.setTrid(3); harjoitteet.lisaaHarjoite(harjoite3); 
    assertEquals("From: Harjoitteet line: 64", 1, harjoitteet.getHarjoite(1).getId()); 
    assertEquals("From: Harjoitteet line: 65", 2, harjoitteet.getHarjoite(2).getId()); 
    assertEquals("From: Harjoitteet line: 66", 3, harjoitteet.getHarjoite(3).getId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetHarjoite83 */
  @Test
  public void testGetHarjoite83() {    // Harjoitteet: 83
    Harjoitteet harjoitteet = new Harjoitteet(); 
    Harjoite harjoite1 = new Harjoite("testi1", 0, 3); harjoite1.rekisteroi(); harjoite1.setTrid(1); harjoitteet.lisaaHarjoite(harjoite1); 
    Harjoite harjoite2 = new Harjoite("testi2", 0, 3); harjoite2.rekisteroi(); harjoite2.setTrid(2); harjoitteet.lisaaHarjoite(harjoite2); 
    Harjoite harjoite3 = new Harjoite("testi3", 0, 3); harjoite3.rekisteroi(); harjoite3.setTrid(2); harjoitteet.lisaaHarjoite(harjoite3); 
    assertEquals("From: Harjoitteet line: 88", "testi1", harjoitteet.getHarjoite("testi1").getNimi()); 
    assertEquals("From: Harjoitteet line: 89", "testi2", harjoitteet.getHarjoite("testi2").getNimi()); 
    assertEquals("From: Harjoitteet line: 90", "testi3", harjoitteet.getHarjoite("testi3").getNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetHarjoitteet115 */
  @Test
  public void testGetHarjoitteet115() {    // Harjoitteet: 115
    Harjoitteet harjoitteet = new Harjoitteet(); 
    Harjoite harjoite1 = new Harjoite("testi1", 0, 3); harjoite1.rekisteroi(); harjoite1.setTrid(1); harjoitteet.lisaaHarjoite(harjoite1); 
    Harjoite harjoite2 = new Harjoite("testi2", 0, 3); harjoite2.rekisteroi(); harjoite2.setTrid(2); harjoitteet.lisaaHarjoite(harjoite2); 
    Harjoite harjoite3 = new Harjoite("testi3", 0, 3); harjoite3.rekisteroi(); harjoite3.setTrid(2); harjoitteet.lisaaHarjoite(harjoite3); 
    assertEquals("From: Harjoitteet line: 120", "testi1", harjoitteet.getHarjoitteet().get(0).getNimi()); 
    assertEquals("From: Harjoitteet line: 121", "testi2", harjoitteet.getHarjoitteet().get(1).getNimi()); 
    assertEquals("From: Harjoitteet line: 122", "testi3", harjoitteet.getHarjoitteet().get(2).getNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEtsi163 */
  @Test
  public void testEtsi163() {    // Harjoitteet: 163
    Harjoitteet harjoitteet = new Harjoitteet(); 
    Harjoite harjoite1 = new Harjoite("testi1", 0, 3); harjoite1.rekisteroi(); harjoitteet.lisaaHarjoite(harjoite1); 
    Harjoite harjoite2 = new Harjoite("testi2", 0, 3); harjoite2.rekisteroi(); harjoitteet.lisaaHarjoite(harjoite2); 
    Harjoite harjoite3 = new Harjoite("testi3", 0, 3); harjoite3.rekisteroi(); harjoitteet.lisaaHarjoite(harjoite3); 
    assertEquals("From: Harjoitteet line: 168", "testi1", harjoitteet.etsi(harjoite1.getNimi()).get(0).getNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista225 */
  @Test
  public void testPoista225() {    // Harjoitteet: 225
    Harjoitteet harjoitteet = new Harjoitteet(); 
    Harjoite harjoite1 = new Harjoite("testi1", 0, 3); harjoite1.rekisteroi(); harjoitteet.lisaaHarjoite(harjoite1); 
    Harjoite harjoite2 = new Harjoite("testi2", 0, 3); harjoite2.rekisteroi(); harjoitteet.lisaaHarjoite(harjoite2); 
    Harjoite harjoite3 = new Harjoite("testi3", 0, 3); harjoite3.rekisteroi(); harjoitteet.lisaaHarjoite(harjoite3); 
    int id = harjoite1.getId(); 
    harjoitteet.poista(id); 
    assertEquals("From: Harjoitteet line: 232", null, harjoitteet.getHarjoite(id)); 
  } // Generated by ComTest END
}